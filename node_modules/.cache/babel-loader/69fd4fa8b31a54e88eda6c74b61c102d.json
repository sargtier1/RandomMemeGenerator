{"ast":null,"code":"import _classCallCheck from \"/Users/justtams/projects/meme_generator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/justtams/projects/meme_generator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/justtams/projects/meme_generator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/justtams/projects/meme_generator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/justtams/projects/meme_generator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/justtams/projects/meme_generator/src/components/Generator.jsx\";\nimport React, { Component } from \"react\";\n\nvar Generator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Generator, _Component);\n\n  function Generator() {\n    var _this;\n\n    _classCallCheck(this, Generator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Generator).call(this));\n    _this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"http://i.imgflip.com/1bij.jpg\",\n      allMemes: []\n    };\n    return _this;\n  }\n\n  _createClass(Generator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.imgflip.com/get_memes\").then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        var memes = res.data.memes;\n\n        _this2.setState({\n          allMemes: memes\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"top-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"  \"), React.createElement(\"input\", {\n        className: \"bottom-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"  \"), React.createElement(\"button\", {\n        className: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Create Meme\")));\n    }\n  }]);\n\n  return Generator;\n}(Component);\n\nexport default Generator;","map":{"version":3,"sources":["/Users/justtams/projects/meme_generator/src/components/Generator.jsx"],"names":["React","Component","Generator","state","topText","bottomText","randomImage","allMemes","fetch","then","res","json","memes","data","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,S;;;;;AACJ,uBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,WAAW,EAAE,+BAHF;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAFY;AAQb;;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAC,GAAG,EAAI;AAAA,YACHE,KADG,GACOF,GAAG,CAACG,IADX,CACHD,KADG;;AAEX,QAAA,MAAI,CAACE,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAEK;AADE,SAAd;AAGD,OAPH;AAQD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAME;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,CADF,CADF;AAYD;;;;EAnCqBX,S;;AAsCxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Generator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"http://i.imgflip.com/1bij.jpg\",\n      allMemes: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then(res => res.json())\n      .then(res => {\n        const { memes } = res.data;\n        this.setState({\n          allMemes: memes\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"form\">\n          <input className=\"top-text\"\n          \n          >  </input>\n\n          <input className=\"bottom-text\">  </input>\n          <button className=\"submit\">Create Meme</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Generator;\n"]},"metadata":{},"sourceType":"module"}