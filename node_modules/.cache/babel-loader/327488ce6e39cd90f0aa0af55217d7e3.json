{"ast":null,"code":"import _classCallCheck from \"/Users/justtams/projects/meme_generator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/justtams/projects/meme_generator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/justtams/projects/meme_generator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/justtams/projects/meme_generator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/justtams/projects/meme_generator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/justtams/projects/meme_generator/src/components/Generator.jsx\";\nimport React, { Component } from \"react\";\n\nvar Generator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Generator, _Component);\n\n  function Generator() {\n    var _this;\n\n    _classCallCheck(this, Generator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Generator).call(this));\n    _this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"http://i.imgflip.com/1bij.jpg\",\n      allMemes: []\n    };\n    return _this;\n  }\n\n  _createClass(Generator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.imgflip.com/get_memes\").then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        var memes = res.data.memes;\n\n        _this2.setState({\n          allMemes: memes\n        });\n      });\n    }\n  }, {\n    key: \"handleOnChange\",\n    value: function handleOnChange(event) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"top-text\",\n        placeholder: \"Enter Top Text Here\",\n        type: \"text\",\n        value: this.state.topText,\n        name: \"topText\",\n        onChange: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"bottom-text\",\n        placeholder: \"Enter Bottom Text Here\",\n        type: \"text\",\n        value: this.state.bottomText,\n        name: \"bottomText\",\n        onChange: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Create Meme\")));\n    }\n  }]);\n\n  return Generator;\n}(Component);\n\nexport default Generator;","map":{"version":3,"sources":["/Users/justtams/projects/meme_generator/src/components/Generator.jsx"],"names":["React","Component","Generator","state","topText","bottomText","randomImage","allMemes","fetch","then","res","json","memes","data","setState","event"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,S;;;;;AACJ,uBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,WAAW,EAAE,+BAHF;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAFY;AAQb;;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAC,GAAG,EAAI;AAAA,YACHE,KADG,GACOF,GAAG,CAACG,IADX,CACHD,KADG;;AAEX,QAAA,MAAI,CAACE,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAEK;AADE,SAAd;AAGD,OAPH;AAQD;;;mCAEcG,K,EAAO,CAErB;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,WAAW,EAAC,qBAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,OAJpB;AAKE,QAAA,IAAI,EAAC,SALP;AAME,QAAA,QAAQ,EAAC,EANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,WAAW,EAAC,wBAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,UAJpB;AAKE,QAAA,IAAI,EAAC,YALP;AAME,QAAA,QAAQ,EAAC,EANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAkBE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAlBF,CADF,CADF;AAwBD;;;;EAnDqBJ,S;;AAsDxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Generator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImage: \"http://i.imgflip.com/1bij.jpg\",\n      allMemes: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then(res => res.json())\n      .then(res => {\n        const { memes } = res.data;\n        this.setState({\n          allMemes: memes\n        });\n      });\n  }\n\n  handleOnChange(event) {\n\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"form\">\n          <input \n            className=\"top-text\"\n            placeholder=\"Enter Top Text Here\"\n            type=\"text\"\n            value={this.state.topText}\n            name=\"topText\"\n            onChange=\"\" \n          />\n\n          <input \n            className=\"bottom-text\"\n            placeholder=\"Enter Bottom Text Here\"\n            type=\"text\"\n            value={this.state.bottomText}\n            name=\"bottomText\"\n            onChange=\"\" \n           />\n          <button className=\"submit\">Create Meme</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Generator;\n"]},"metadata":{},"sourceType":"module"}